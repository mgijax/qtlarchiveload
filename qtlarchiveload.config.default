#format: sh
#
#  qtlarchiveload.config.default
#
#  This file sets up environment variables that are needed for 
#  the QTL Archive load
#
###########################################################################

###########################################################################
#
#  GENERAL SETTINGS
#
###########################################################################

#
#  If the MGICONFIG environment variable does not have a local override,
#  use the default "live" settings.
#
if [ "${MGICONFIG}" = "" ]
then
    MGICONFIG=/usr/local/mgi/live/mgiconfig
    export MGICONFIG
fi

. ${MGICONFIG}/master.config.sh

###########################################################################
#
#  LOAD SPECIFIC SETTINGS
#
###########################################################################

#  Path name of the archive, logs, reports and output directories
FILEDIR=${DATALOADSOUTPUT}/mgi/qtlarchiveload
ARCHIVEDIR=${FILEDIR}/archive
LOGDIR=${FILEDIR}/logs
RPTDIR=${FILEDIR}/reports
OUTPUTDIR=${FILEDIR}/output
INPUTDIR=${FILEDIR}/input
export FILEDIR ARCHIVEDIR LOGDIR RPTDIR OUTPUTDIR INPUTDIR

# Full path to the default input file.
# This is where the publish script places the file
INPUT_FILE_CURATOR=${INPUTDIR}/QTL_Archive_Load_File.txt
INPUT_FILE_DEFAULT=${INPUTDIR}/qtlarchiveload.txt
export INPUT_FILE_CURATOR INPUT_FILE_DEFAULT


# 'load' - load tables
# 'preview' - perform all record verifications, create all output files
#   but do not load the data or make any changes to the database.
QTLMODE=load
export QTLMODE

# Full path to the "cleaned up" QC-ready input file that is created and used
# by the sanity/QC report script.
#
INPUT_FILE_QC=${OUTPUTDIR}/qtlarchiveload_qc.txt
export INPUT_FILE_QC

# Full path to the bcp file for loading the input file into the temp table.
#
INPUT_FILE_BCP=${OUTPUTDIR}/qtlarchiveload_temp.bcp
export INPUT_FILE_BCP

#  Association Loader shell script
ASSOCLOADER_SH=${ASSOCLOAD}/bin/AssocLoad.sh
export ASSOCLOADER_SH

# Full path to the load-ready assocload file that is created by the
# sanity/QC report script when run in 'live' mode. This file is used 
# by the association loader, so if you change its name, you must change it
# in the annotload.csh.config as well
ASSOC_FILE=${OUTPUTDIR}/qtlarchiveload_assoc.txt
export ASSOC_FILE

# Full path to the  sanity/QC log.
#
QTLARCHIVELOADQC_LOGFILE=${LOGDIR}/qtlarchiveQC.log
export QTLARCHIVELOADQC_LOGFILE 

# Full path to the sanity/QC reports.
#
SANITY_RPT=${RPTDIR}/sanity.rpt
INVALID_MARKER_RPT=${RPTDIR}/invalid_marker.rpt
SEC_MARKER_RPT=${RPTDIR}/secondary_marker.rpt
INVALID_TERMID_RPT=${RPTDIR}/invalid_mcvid.rpt
INVALID_JNUM_RPT=${RPTDIR}/invalid_jnum.rpt
INVALID_EVID_RPT=${RPTDIR}/invalid_evid.rpt
INVALID_EDITOR_RPT=${RPTDIR}/invalid_editor.rpt
MULTIPLE_MCV_RPT=${RPTDIR}/multiple_mcv.rpt
MKR_TYPE_CONFLICT_RPT=${RPTDIR}/markertype_conflict.rpt
GRPNG_TERM_RPT=${RPTDIR}/grouping_term.rpt 
BEFORE_AFTER_RPT=${RPTDIR}/before_after.rpt
RPT_NAMES_RPT=${RPTDIR}/reportsWithDiscrepancies.rpt

export SANITY_RPT
export INVALID_MARKER_RPT SEC_MARKER_RPT INVALID_TERMID_RPT 
export INVALID_JNUM_RPT INVALID_EVID_RPT INVALID_EDITOR_RPT
export MULTIPLE_MCV_RPT MKR_TYPE_CONFLICT_RPT GRPNG_TERM_RPT
export BEFORE_AFTER_RPT RPT_NAMES_RPT

# minimum number of columns expected for the input file (for sanity check).
#
QTLARCHIVELOAD_FILE_COLUMNS=2
export QTLARCHIVELOAD_FILE_COLUMNS

# Temp table that will be loaded from the input file.
#
MCVLOAD_TEMP_TABLE=QTLLoad
export MCVLOAD_TEMP_TABLE

# Full path to QC/sanity scripts.
#
QTLARCHIVELOAD_QC=${QTLARCHIVELOAD}/bin/qtlarchiveQC.py
QTLARCHIVELOAD_QC_SH=${QTLARCHIVELOAD}/bin/qtlarchiveQC.sh
export QTLARCHIVELOAD_QC QTLARCHIVELOAD_QC_SH

# Complete path name of the qtlarchiveload log files
LOG_FILE=${LOGDIR}/qtlarchiveload.log
LOG_PROC=${LOGDIR}/qtlarchiveload.proc.log
LOG_DIAG=${LOGDIR}/qtlarchiveload.diag.log
LOG_CUR=${LOGDIR}/qtlarchiveload.cur.log
LOG_VAL=${LOGDIR}/qtlarchiveload.val.log
LOG_ERROR=${LOGDIR}/qtlarchiveload.error.log
export LOG_FILE LOG_PROC LOG_DIAG LOG_CUR LOG_VAL LOG_ERROR

#  The name of the job stream for the load
JOBSTREAM=qtlarchiveload
export JOBSTREAM

###########################################################################
#
#  MISCELLANEOUS SETTINGS
#
###########################################################################

#  The name of the load for the subject of an email notification
MAIL_LOADNAME="QTL Archive Load"
export MAIL_LOADNAME

INSTALLDIR=${QTLARCHIVELOAD}
export INSTALLDIR
